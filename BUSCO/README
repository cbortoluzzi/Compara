Set of shell and python scripts to run BUSCO on a set of assemblies and a phylogenetic tree on the same set.

Example:

./busco.sh busco.v5/Tautogolabrus_adspersus/GCA_020745685.1_fTauAds1.pri.cur_genomic.fasta busco_downloads/vertebrata_odb10

The script assumes a directory for each assembly named after the species name (i.e. Tautogolabrus_adspersus). The script also assumes that the lineage dataset (i.e. vertebrata_odb10) is already downloaded. 
BUSCO will store all results, logs and intermediate data in a folder named after the species. Once BUSCO has completed all its jobs, I recommend to change the name of this folder to "vertebrata_odb10_metaeuk" and move it under the species's folder that already contains the assembly. 

E.g. before BUSCO
busco.v5/Tautogolabrus_adspersus
    GCA_020745685.1_fTauAds1.pri.cur_genomic.fasta
    
After BUSCO
busco.v5/Tautogolabrus_adspersus
    GCA_020745685.1_fTauAds1.pri.cur_genomic.fasta
    vertebrata_odb10_metaeuk



./busco2phylo.sh list_species.txt busco.v5

The script requires a text file (i.e. list_species.txt) that contains, one per line, the name of all species we want to include in the phylogenetic tree. The name of this file can be different from that provided in this example.
The script also requires the path and name of the main folder (i.e. busco.v5) where all BUSCO outputs are stored. The script will automatically iterate over each species's folder and BUSCO's folder to collect all information required to build a phylogenetic tree. 


Requirements

Busco:https://busco.ezlab.org/busco_userguide.html#lineage-datasets
mafft v.7.490: https://mafft.cbrc.jp/alignment/software/source.html
trimal v.1.3: https://github.com/inab/trimal
RAxML v.8.2.12: https://github.com/stamatak/standard-RAxML
python 3.9.2
